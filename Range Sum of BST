/**
* author: Darshika
* Question Link: https://leetcode.com/problems/range-sum-of-bst/
* Time Complexity: O(n)
* Space Complexity: O(1)
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int rangeSumBST(TreeNode root, int low, int high) {
        
        if(root == null ){
            return 0;
        }
        
        int sum = root.val>=low && root.val <= high ? root.val : 0;
        
        if(root.val >= low ) {
            sum += rangeSumBST(root.left,low,high);
        }
        if(root.val <= high){
            sum += rangeSumBST(root.right,low,high);
        }
        
        return sum ;
    }
}
