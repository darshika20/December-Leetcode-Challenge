/**
* author: Darshika
* Question Link: https://leetcode.com/problems/maximal-square/
* Time Complexity: O(n*m)
* Space Complexity: O(n*m)
*/

class Solution {
    public int maximalSquare(char[][] matrix) {
        int[][] dp = new int[matrix.length][matrix[0].length];
        int rad = 0;
        for(int i =0;i<dp.length;i++){
            for(int j =0;j<dp[0].length;j++){
                if(matrix[i][j] == '1'){
                    if((i == 0 && j == 0) || i == 0 || j == 0){
                        dp[i][j] = 1;
                    }else{
                        dp[i][j] = Math.min(dp[i-1][j],dp[i-1][j-1]);
                        dp[i][j] = Math.min(dp[i][j],dp[i][j-1]);
                        dp[i][j]++;
                    }
                }
                rad = Math.max(rad,dp[i][j]);
            }
        }
        return rad*rad;
    }
}
